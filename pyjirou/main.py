import pandas as pd

data = {
    'shop_name': ['ラーメン二郎 札幌店', 'ラーメン二郎 仙台店', 'ラーメン二郎 会津若松駅前店', 'ラーメン二郎 新潟店', 'ラーメン二郎 ひたちなか店', 
                  'ラーメン二郎 栃木街道店', 'ラーメン二郎前橋千代田町店', 'ラーメン二郎 千葉店', 'ラーメン二郎 松戸駅前店', 'ラーメン二郎 京成大久保店',
                  'ラーメン二郎 柏店', 'ラーメン二郎 横浜関内店', 'ラーメン二郎 中山駅前店', 'ラーメン二郎 京急川崎店', 'ラーメン二郎 相模大野店',
                  'ラーメン二郎 湘南藤沢店', 'ラーメン二郎 生田駅前店', 'ラーメン二郎 三田本店', 'ラーメン二郎 神田神保町店', 'ラーメン二郎 池袋東口店',
                  'ラーメン二郎 新宿歌舞伎町店', 'ラーメン二郎 新宿小滝橋通り店', 'ラーメン二郎 上野毛店', 'ラーメン二郎 環七新新代田店',
                  'ラーメン二郎 目黒店', 'ラーメン二郎 品川店', 'ラーメン二郎 西台駅前店', 'ラーメン二郎 桜台駅前店', 'ラーメン二郎 ひばりヶ丘駅前店',
                  'ラーメン二郎 千住大橋駅前店', 'ラーメン二郎 亀戸店', 'ラーメン二郎 小岩店', 'ラーメン二郎 環七一之江店', 'ラーメン二郎 荻窪店',
                  'ラーメン二郎 仙川店', 'ラーメン二郎 府中店', 'ラーメン二郎 立川店', 'ラーメン二郎 八王子野猿街道店2', 'ラーメン二郎 めじろ台店',
                  'ラーメン二郎 一橋学園店', 'ラーメン二郎大宮公園駅前店', 'ラーメン二郎 川越店', 'ラーメン二郎 越谷店', 'ラーメン二郎 京都店'],
    'address': ['北海道札幌市北区北六条西8-8-1', '宮城県仙台市青葉区立町2−8', '福島県会津若松市駅前町6−31', '新潟県新潟市中央区万代5丁目2-8', '茨城県ひたちなか市田彦1648-4',
                '栃木県下都賀郡壬生町本丸2丁目15−67', '群馬県前橋市千代田町4丁目12−3', '千葉県千葉市中央区中央1丁目7-8', '千葉県松戸市本町17−9', '千葉県船橋市三山2-1-11',
                '千葉県柏市十余二249-5', '神奈川県横浜市中区長者町6-94', '神奈川県横浜市緑区台村町309−1', '神奈川県川崎市川崎区本町2-10-1', '神奈川県相模原市南区相模大野6-14-9 MKプラザⅡ 103号',
                '神奈川県藤沢市本町1丁目10-14', '神奈川県川崎市多摩区生田8-1-15', '東京都港区三田2-16-4', '東京都千代田区神田神保町1-21-4', '東京都豊島区南池袋2-27-17',
                '東京都新宿区歌舞伎町2-37-5 日新ビル1階', '東京都新宿区西新宿7-5-5', '東京都世田谷区上野毛1-26-16', '東京都世田谷区代田5-29-5', '東京都目黒区目黒3-7-2',
                '東京都品川区北品川1-18-5', '東京都板橋区蓮根3-9-7', '東京都練馬区桜台1-5-1', '東京都西東京市谷戸町3-27-24 ひばりヶ丘プラザ1F', '東京都足立区千住橋戸町 10-8',
                '東京都江東区亀戸4-35-17 エレガントコーポラス101号', '東京都江戸川区西小岩3-31-13', '東京都江戸川区一之江8-3-4', '東京都杉並区荻窪4-33-1', '東京都調布市仙川町1-10-17',
                '東京都府中市宮西町1-15-5 関野屋ビル1F', '東京都立川市柴崎町2-10-1', '東京都八王子市堀之内2-13-16', '東京都八王子市椚田町513-9', '東京都小平市学園西町2-13-4',
                '埼玉県さいたま市大宮区寿能町1-25-1', '埼玉県川越市旭町1-4-15', '埼玉県越谷市越ヶ谷2-3-7', '京都府京都市左京区一乗寺里ノ前町4番'],
    'lat': [43.067162, 38.26162, 37.506386, 37.917233, 36.409092, 36.422985, 36.392548, 35.610481, 35.785427, 35.691578,
            35.881977, 35.442196, 35.51297, 35.534908, 35.529911, 35.342964, 35.615597, 35.648045, 35.69529, 35.728195,
            35.696198, 35.696323, 35.612442, 35.661949, 35.634285, 35.623974, 35.7869, 35.738781, 35.749908, 35.742706,
            35.701885, 35.734898, 35.684071, 35.703602, 35.661385, 35.672115, 35.696507, 35.62962, 35.638947, 35.722313,
            35.921692, 35.90274, 35.890182, 35.043465],
    'lon': [141.343063, 140.866196, 139.93132, 139.06015, 140.514603, 139.7948, 139.070999, 140.123581, 139.899033, 140.049591,
            139.957626, 139.63089, 139.538147, 139.705704, 139.432846, 139.482269, 139.546448, 139.741516, 139.761002, 139.713913,
            139.701874, 139.698318, 139.639023, 139.660385, 139.707077, 139.742966, 139.674423, 139.661301, 139.543793, 139.796906,
            139.826706, 139.880005, 139.881927, 139.626282, 139.583847, 139.477158, 139.409515, 139.40126, 139.312744, 139.479294,
            139.632248, 139.476166, 139.787659, 135.787445]
}

df = pd.DataFrame(data)


from math import radians, sin, cos, sqrt, atan2

def haversine(lon1, lat1, lon2, lat2):
    R = 6371.0

    lon1 = radians(lon1)
    lat1 = radians(lat1)
    lon2 = radians(lon2)
    lat2 = radians(lat2)

    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = sin(dlat / 2)**2 + cos(lat1) * cos(lat2) * sin(dlon / 2)**2
    c = 2 * atan2(sqrt(a), sqrt(1 - a))
    distance = R * c

    return distance

def jiro(lon, lat):
    if lat < -90 or lat > 90:
        raise ValueError('Latitude must be in the [-90; 90] range.')
    if lon < -180 or lon > 180:
        raise ValueError('Longitude must be in the [-180; 180] range.')
    location = (lon, lat)

    for i in range(len(df)):
        destination = (df.at[i, 'lon'], df.at[i, 'lat'])
        distance = haversine(lon, lat, df.at[i, 'lon'], df.at[i, 'lat'])
        df.at[i, 'distance'] = distance
    nearest_shop = df.sort_values(by='distance').iloc[0]
    return nearest_shop